import unittest

from monotonic.MonotonicFunctionGenerator import MonotonicFunctionGenerator


class TestMonotonicGenerator(unittest.TestCase):
    mono_generator = MonotonicFunctionGenerator(2)
    functions = mono_generator.generate_monotonic_functions()

    def test_functions(self):
        # From the project paper
        expected_results = [
            {(0, 0): 0, (1, 0): 0, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 0, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 0, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 0, (1, 0): 0, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 0, (1, 0): 0, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 0, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 1, (2, 2): 1},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 0, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 1, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 0},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 0, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 1, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 0, (2, 2): 1},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 0, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 1, (2, 2): 1},
            {(0, 0): 1, (1, 0): 1, (2, 0): 1, (0, 1): 1, (1, 1): 1, (2, 1): 1, (0, 2): 0, (1, 2): 1, (2, 2): 1},
        ]
        for func in self.functions:
            self.assertIn(func, expected_results)


if __name__ == "__main__":
    unittest.main()
